From 10acc266f6398d9c9e9cf123f19a6e4335436cb2 Mon Sep 17 00:00:00 2001
From: Silvio Traversaro <silvio@traversaro.it>
Date: Sun, 14 May 2023 22:13:52 +0200
Subject: [PATCH] tests: Always initialize twists with idyntree.Twist.Zero()

---
 tests/test_CasADi_computations.py  | 4 ++--
 tests/test_Jax_computations.py     | 4 ++--
 tests/test_NumPy_computations.py   | 4 ++--
 tests/test_pytorch_computations.py | 4 ++--
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/tests/test_CasADi_computations.py b/tests/test_CasADi_computations.py
index 73c53e9..c604829 100644
--- a/tests/test_CasADi_computations.py
+++ b/tests/test_CasADi_computations.py
@@ -76,7 +76,7 @@ def H_from_Pos_RPY_idyn(xyz, rpy):
 
 # set iDynTree kinDyn
 H_b_idyn = H_from_Pos_RPY_idyn(xyz, rpy)
-vb = idyntree.Twist()
+vb = idyntree.Twist.Zero()
 [vb.setVal(i, base_vel[i]) for i in range(6)]
 
 s = idyntree.VectorDynSize(n_dofs)
@@ -190,7 +190,7 @@ def test_coriolis_term():
 
 
 def test_gravity_term():
-    vb0 = idyntree.Twist()
+    vb0 = idyntree.Twist.Zero()
     s_dot0 = idyntree.VectorDynSize(n_dofs)
     kinDyn.setRobotState(H_b_idyn, s, vb0, s_dot0, g)
     G_iDyn = idyntree.FreeFloatingGeneralizedTorques(kinDyn.model())
diff --git a/tests/test_Jax_computations.py b/tests/test_Jax_computations.py
index 2bb81e0..ed9ff96 100644
--- a/tests/test_Jax_computations.py
+++ b/tests/test_Jax_computations.py
@@ -76,7 +76,7 @@ def H_from_Pos_RPY_idyn(xyz, rpy):
 
 # set iDynTree kinDyn
 H_b_idyn = H_from_Pos_RPY_idyn(xyz, rpy)
-vb = idyntree.Twist()
+vb = idyntree.Twist.Zero()
 [vb.setVal(i, base_vel[i]) for i in range(6)]
 
 s = idyntree.VectorDynSize(n_dofs)
@@ -185,7 +185,7 @@ def test_gravity_term():
     kinDyn2.loadRobotModel(robot_iDyn.model())
     kinDyn2.setFloatingBase(root_link)
     kinDyn2.setFrameVelocityRepresentation(idyntree.MIXED_REPRESENTATION)
-    vb0 = idyntree.Twist()
+    vb0 = idyntree.Twist.Zero()
     s_dot0 = idyntree.VectorDynSize(n_dofs)
     kinDyn2.setRobotState(H_b_idyn, s, vb0, s_dot0, g)
     G_iDyn = idyntree.FreeFloatingGeneralizedTorques(kinDyn2.model())
diff --git a/tests/test_NumPy_computations.py b/tests/test_NumPy_computations.py
index d0356fa..863ae2a 100644
--- a/tests/test_NumPy_computations.py
+++ b/tests/test_NumPy_computations.py
@@ -75,7 +75,7 @@ def H_from_Pos_RPY_idyn(xyz, rpy):
 
 # set iDynTree kinDyn
 H_b_idyn = H_from_Pos_RPY_idyn(xyz, rpy)
-vb = idyntree.Twist()
+vb = idyntree.Twist.Zero()
 [vb.setVal(i, base_vel[i]) for i in range(6)]
 
 s = idyntree.VectorDynSize(n_dofs)
@@ -184,7 +184,7 @@ def test_gravity_term():
     kinDyn2.loadRobotModel(robot_iDyn.model())
     kinDyn2.setFloatingBase(root_link)
     kinDyn2.setFrameVelocityRepresentation(idyntree.MIXED_REPRESENTATION)
-    vb0 = idyntree.Twist()
+    vb0 = idyntree.Twist.Zero()
     s_dot0 = idyntree.VectorDynSize(n_dofs)
     kinDyn2.setRobotState(H_b_idyn, s, vb0, s_dot0, g)
     G_iDyn = idyntree.FreeFloatingGeneralizedTorques(kinDyn2.model())
diff --git a/tests/test_pytorch_computations.py b/tests/test_pytorch_computations.py
index f400a62..db0d70e 100644
--- a/tests/test_pytorch_computations.py
+++ b/tests/test_pytorch_computations.py
@@ -76,7 +76,7 @@ def H_from_Pos_RPY_idyn(xyz, rpy):
 
 # set iDynTree kinDyn
 H_b_idyn = H_from_Pos_RPY_idyn(xyz, rpy)
-vb = idyntree.Twist()
+vb = idyntree.Twist.Zero()
 [vb.setVal(i, base_vel[i]) for i in range(6)]
 
 s = idyntree.VectorDynSize(n_dofs)
@@ -185,7 +185,7 @@ def test_gravity_term():
     kinDyn2.loadRobotModel(robot_iDyn.model())
     kinDyn2.setFloatingBase(root_link)
     kinDyn2.setFrameVelocityRepresentation(idyntree.MIXED_REPRESENTATION)
-    vb0 = idyntree.Twist()
+    vb0 = idyntree.Twist.Zero()
     s_dot0 = idyntree.VectorDynSize(n_dofs)
     kinDyn2.setRobotState(H_b_idyn, s, vb0, s_dot0, g)
     G_iDyn = idyntree.FreeFloatingGeneralizedTorques(kinDyn2.model())
